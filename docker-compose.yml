version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  spark:
    image: bitnami/spark:latest
    ports:
      - "7077:7077"
      - "8080:8080"
    environment:
      - SPARK_MODE=master

  airflow:
    image: apache/airflow:2.6.3
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 1502
    ports:
      - "1502:1502"
    volumes:
      - ./dags:/opt/airflow/dags
    command: >
      bash -c "airflow db init &&
               airflow scheduler & 
               airflow webserver"

  producer:
    build:
      context: .
      dockerfile: docker/producer/Dockerfile
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  consumer:
    build:
      context: .
      dockerfile: docker/consumer/Dockerfile
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  kafka_to_postgres:
    build:
      context: .
      dockerfile: docker/kafka_to_postgres/Dockerfile
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow

  spark_streaming:
    build:
      context: .
      dockerfile: docker/spark_kafka_streaming/Dockerfile
    depends_on:
      - kafka
      - spark
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

volumes:
  pgdata:
